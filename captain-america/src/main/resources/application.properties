#### SERVER CONFIG ####
server.port=8888
server.session-timeout=60
#### DATASOURCE CONFIG ####
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://10.1.102.151:3306/hive?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=lifeng
#spring.datasource.primary.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.primary.url=jdbc:mysql://10.1.102.151:3306/hive?useUnicode=true&characterEncoding=utf-8
#spring.datasource.primary.username=root
#spring.datasource.primary.password=lifeng
#spring.datasource.secondary.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.secondary.url=jdbc:mysql://10.1.200.93:3306/dw_monitor?useUnicode=true&characterEncoding=utf-8
#spring.datasource.secondary.username=root
#spring.datasource.secondary.password=JT5OdiSuGd4i64
#### SPRING DATA JPA CONFIG ####
spring.jpa.database=MYSQL
#spring.jpa.show-sql=true
#create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。create-drop：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。validate：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#### THYMELEAF CONFIG ####
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=false
#### LOGBACK CONFIG ####
logging.config=classpath:logback-spring.xml
